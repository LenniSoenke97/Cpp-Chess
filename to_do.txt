
// Now
**- comment all functions
**- check all files and remove superfluous code 
**- order functions in .cpp and .hpp files in same order
**- check that checkmate
**- add a clean call in makefile that removes all .o and all .gch files
**- make sure all funcitns have "override"
**- fix compilation errors

**- split all my checks into different functions
- make global constants file and import everywhere, do the #define
- remove error printing from piece
- make board error printing functions
- make castling function in ChessBoard
- make all the applicable chessboard.cpp functions const
- pass the board by const reference because it is expsneive to copy??

- re-arrange ChessBoard.cpp so function in right order

- make text output similar to what is seen in labts test


- WHEN AT HOME: change all arguments in canMove functions (and other
functions like the killDiagonal) to const references -
https://co517.pages.doc.ic.ac.uk/decks/MSc/StructuringData.pdf (page 32)
==> ask max


- implement castling
- check for memory leaks
- implement destructors
- comment constructor and destructors
- implement castling
- make the right attributes and parameters const

// Global changes stage
- find better solution for stalemate (max)
- make max check makefile (max)
- change the parameters passed (follow best practices from lecture slides)
- TEST stalemate (set only two pawns who are in front of each other
and then stalemate)
- TEST castling
- check with max the structure of my classes

// Submission stage
- remove display_board and the display attribute
- remove all .o files and other files
- make sure all lines break after 80 characters
- reindent
- remove "// delete"
- remove print board helper functions and all "display" attribute setting
